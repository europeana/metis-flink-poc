version: '3.8'

services:
  cassandra:
    image: cassandra:3.11.16
    container_name: flink-cassandra
    restart: always
    ports:
      - 9042:9042
      - 9160:9160
    volumes:
      - /data/cassandra:/var/lib/cassandra

  zookeeper:
    image: zookeeper:3.9.2
    container_name: flink-zookeeper
    restart: always
    ports:
      - 2181:2181

  solr:
    image: solr:7.7.3
    container_name: flink-solr
    restart: always
    ports:
      - 8983:8983
    volumes:
      - /data/solr:/var/solr

  flink-jobmanager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flink-rich-poc-jm
    command: jobmanager
    environment:
      - "FLINK_PROPERTIES = jobmanager.rpc.address: jobmanager \n
          taskmanager.numberOfTaskSlots: 4 \n
          blob.server.port: 6124 \n
          jobmanager.rpc.port: 6123 \n
          taskmanager.rpc.port: 6122 \n
          jobmanager.memory.process.size: 2728m \n
          taskmanager.memory.process.size: 2728m \n
          taskmanager.memory.jvm-metaspace.size: 512MB \n
          jobmanager.memory.jvm-metaspace.size: 512MB \n
          parallelism.default: 2 \n
          env.java.opts.all: \"-XX:MaxDirectMemorySize=1170210816 --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.util.concurrent.atomic=ALL-UNNAMED -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.rmi.port=1099 -Djava.rmi.server.hostname=127.0.0.1 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/dumps\" \n
          web.upload.dir: /web-upload \n
          jobstore.expiration-time: 172800 \n
          jobstore.type: File \n
          process.jobmanager.working-dir: /working-directory \n
          state.checkpoints.dir: /data/flink/checkpoints \n
          jobmanager.resource-id: poc1"
    volumes:
      - /data/flink/deployments:/deployments
      - flink-log:/opt/flink/log
      - /data/flink/jobs-config:/jobs-config
      - flink-checkpoints:/data/flink/checkpoints
    ports:
      - '6123:6123'
      - '6124:6124'
      - '8081:8081'
    networks:
      - flink-network
  flink-taskmanager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flink-rich-poc-tm
    command: taskmanager
    environment:
      - "FLINK_PROPERTIES = jobmanager.rpc.address: jobmanager \n
               taskmanager.numberOfTaskSlots: 4 \n
               blob.server.port: 6124 \n
               jobmanager.rpc.port: 6123 \n
               taskmanager.rpc.port: 6122 \n
               jobmanager.memory.process.size: 2728m \n
               taskmanager.memory.process.size: 2728m \n
               taskmanager.memory.jvm-metaspace.size: 512MB \n
               jobmanager.memory.jvm-metaspace.size: 512MB \n
               parallelism.default: 2 \n
               env.java.opts.all: \"-XX:MaxDirectMemorySize=1170210816 --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.util.concurrent.atomic=ALL-UNNAMED -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.rmi.port=1099 -Djava.rmi.server.hostname=127.0.0.1 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/dumps\" \n
               web.upload.dir: /web-upload \n
               jobstore.expiration-time: 172800 \n
               jobstore.type: File \n
               process.jobmanager.working-dir: /working-directory \n
               state.checkpoints.dir: /data/flink/checkpoints \n
               jobmanager.resource-id: poc1"
    ports:
      - '6122:6122'
    networks:
      - flink-network

networks:
  flink-network:

volumes:
  flink-checkpoints:
    name: flink-checkpoints
    driver: local
  flink-log:
    name: flink-log
    driver: local

